@model IEnumerable<EasyPro.Models.DCompany>
<style>
    #customers {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #customers td, #customers th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #customers tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #customers tr:hover {
            background-color: #4cff00;
        }

        #customers th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #dec3eb;
            color: white;
        }

    .divScroll {
        width: 1110px;
        height: 200px;
        overflow: auto;
    }
</style>
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="normal-table-list mg-t-30">
            <div class="row">
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                    <h3 class="text-danger fa-bold">Company/society </h3>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                    <input id="gfg" type="text" class="form-control"
                           placeholder="Search here">
                </div>
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4 text-right">
                    <a asp-action="Create" class="btn btn-primary">Create New</a>
                </div>
            </div>

            <div class="bsc-tbl-hvr table-border-style">
                <div class="divScroll">
                    <div class="table-responsive">
                        <table class="table table-hover" id="customers">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Name)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Adress)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.PhoneNo)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Email)
                                    </th>
                                    <th></th>
                                </tr>
                            </thead>
                            <tbody id="geeks">
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Adress)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.PhoneNo)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Email)
                                        </td>
                                        <td>
                                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                                            <a asp-action="Delete" id="delete" asp-route-id="@item.Id">Delete</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
@section scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="text/javascript">
        $(function () {
            var checkiftoenable = @Html.Raw(Json.Serialize(ViewBag.checkiftoenable));
            if (checkiftoenable === 0) {
                $('#delete').hide();
            }
            else {
                $('#delete').show();
            }

            $(document).ready(function () {
                $("#gfg").on("keyup", function () {
                    var value = $(this).val().toLowerCase();
                    $("#geeks tr").filter(function () {
                        $(this).toggle($(this).text()
                            .toLowerCase().indexOf(value) > -1)
                    });
                });
            });
        });
    </script>
}