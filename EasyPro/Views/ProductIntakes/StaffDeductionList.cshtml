@model IEnumerable<EasyPro.ViewModels.EmployeeVm>
@{
    ViewData["Title"] = "StaffDeductionList";
}
<style>
    #customers {
        font-family: Arial, Helvetica, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

        #customers td, #customers th {
            border: 1px solid #ddd;
            padding: 8px;
        }

        #customers tr:nth-child(even) {
            background-color: #f2f2f2;
        }

        #customers tr:hover {
            background-color: #00ff21;
        }

        #customers th {
            padding-top: 12px;
            padding-bottom: 12px;
            text-align: left;
            background-color: #dec3eb;
            color: white;
        }
    .divScroll {
        width: 1000px;
        height: 500px;
        overflow: auto;
    }
</style>
<div class="row">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="normal-table-list mg-t-30">
            <div class="row">
                <div class="col-lg-5 col-md-5 col-sm-5 col-xs-5">
                    <h3 class="text-danger fa-bold">Staff Deduction List</h3>
                </div>
                <div class="col-lg-4 col-md-4 col-sm-4 col-xs-4">
                    <input id="gfg" type="text" class="form-control"
                           placeholder="Search here">
                </div>
                <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3">
                    <a asp-action="CreateStaffDeduction" class="btn btn-primary">Create New</a>
                </div>
            </div>
            <div class="bsc-tbl-hvr table-border-style">
                <div class="divScroll">
                    <div class="table-responsive">
                        <table class="table table-hover" id="customers">
                            <thead>
                                <tr>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Empno)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Name)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Date)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Deduction)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Amount)
                                    </th>
                                    <th>
                                        @Html.DisplayNameFor(model => model.Remarks)
                                    </th>
                                </tr>
                            </thead>
                            <tbody id="geeks">
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Empno)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Name)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Date)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Deduction)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Amount)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Remarks)
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                
            </div>
            </div>
        </div>
    </div>
